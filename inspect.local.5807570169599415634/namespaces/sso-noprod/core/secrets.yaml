---
apiVersion: v1
items:
- apiVersion: v1
  data:
    .dockercfg: OTIyMyBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: builder
      kubernetes.io/service-account.uid: 95cbafa9-900f-452b-a2ad-c91440a28b37
      openshift.io/token-secret.name: builder-token-mjpzm
      openshift.io/token-secret.value: ""
    creationTimestamp: "2024-01-31T21:44:31Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"49eae2ba-731c-4623-969a-6ef1e195f4a7"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2024-01-31T21:44:31Z"
    name: builder-dockercfg-744qs
    namespace: sso-noprod
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: builder-token-mjpzm
      uid: 49eae2ba-731c-4623-969a-6ef1e195f4a7
    resourceVersion: "51037733"
    uid: 4c280242-cc30-4428-a9e6-69f62b56e64f
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: MTAgYnl0ZXMgbG9uZw==
    service-ca.crt: 
    token: MTI0OSBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: builder
      kubernetes.io/service-account.uid: 95cbafa9-900f-452b-a2ad-c91440a28b37
    creationTimestamp: "2024-01-31T21:44:31Z"
    labels:
      kubernetes.io/legacy-token-last-used: "2024-01-31"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-01-31T21:44:31Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2024-01-31T21:44:31Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:kubernetes.io/legacy-token-last-used: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-01-31T21:44:46Z"
    name: builder-token-mjpzm
    namespace: sso-noprod
    resourceVersion: "51038005"
    uid: 49eae2ba-731c-4623-969a-6ef1e195f4a7
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    password: OCBieXRlcyBsb25n
    username: OSBieXRlcyBsb25n
  kind: Secret
  metadata:
    creationTimestamp: "2024-02-16T17:07:46Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:password: {}
          f:username: {}
        f:metadata:
          f:ownerReferences:
            .: {}
            k:{"uid":"5f8ce032-d7b1-4108-9409-1c92c40b8f84"}: {}
        f:type: {}
      manager: keycloak-operator
      operation: Update
      time: "2024-02-16T17:07:46Z"
    name: credential-3scale-user-oidc-sso-noprod
    namespace: sso-noprod
    ownerReferences:
    - apiVersion: keycloak.org/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: KeycloakUser
      name: user-oidc
      uid: 5f8ce032-d7b1-4108-9409-1c92c40b8f84
    resourceVersion: "82432378"
    uid: 2076ed40-428d-4778-a7ef-013e2f358fd2
  type: Opaque
- apiVersion: v1
  data:
    ADMIN_PASSWORD: MzIgYnl0ZXMgbG9uZw==
    ADMIN_USERNAME: OCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: ""
    creationTimestamp: "2024-01-31T21:45:07Z"
    labels:
      app.kubernetes.io/instance: sso-gcp-ocp-noprod
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ADMIN_PASSWORD: {}
          f:ADMIN_USERNAME: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
        f:type: {}
      manager: argocd-controller
      operation: Update
      time: "2024-01-31T21:45:07Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:ownerReferences:
            .: {}
            k:{"uid":"3f95cbd7-aa83-4561-add8-26cba88d49b8"}: {}
      manager: keycloak-operator
      operation: Update
      time: "2024-01-31T21:46:52Z"
    name: credential-keycloak
    namespace: sso-noprod
    ownerReferences:
    - apiVersion: keycloak.org/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Keycloak
      name: keycloak
      uid: 3f95cbd7-aa83-4561-add8-26cba88d49b8
    resourceVersion: "51040338"
    uid: 23aeec60-1af2-4c4b-b60f-d8a6fbec54d6
  type: Opaque
- apiVersion: v1
  data:
    .dockercfg: OTIyMyBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: 1375c16f-3ae4-4ad0-87cd-bec824b1ccd0
      openshift.io/token-secret.name: default-token-jjdkn
      openshift.io/token-secret.value: ""
    creationTimestamp: "2024-01-31T21:44:31Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"22e63520-0ddc-48b7-aedf-fb714b7a81a7"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2024-01-31T21:44:31Z"
    name: default-dockercfg-52cwq
    namespace: sso-noprod
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: default-token-jjdkn
      uid: 22e63520-0ddc-48b7-aedf-fb714b7a81a7
    resourceVersion: "51037726"
    uid: 5cc28523-5db5-4a82-8072-c6958a0a9168
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: MTAgYnl0ZXMgbG9uZw==
    service-ca.crt: 
    token: MTI0OSBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: 1375c16f-3ae4-4ad0-87cd-bec824b1ccd0
    creationTimestamp: "2024-01-31T21:44:31Z"
    labels:
      kubernetes.io/legacy-token-last-used: "2024-01-31"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-01-31T21:44:31Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2024-01-31T21:44:31Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:kubernetes.io/legacy-token-last-used: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-01-31T21:44:45Z"
    name: default-token-jjdkn
    namespace: sso-noprod
    resourceVersion: "51037978"
    uid: 22e63520-0ddc-48b7-aedf-fb714b7a81a7
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    .dockercfg: OTI0NyBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: deployer
      kubernetes.io/service-account.uid: 82d45ead-f894-4a25-aac8-8c0c8aa5c363
      openshift.io/token-secret.name: deployer-token-bgjb5
      openshift.io/token-secret.value: ""
    creationTimestamp: "2024-01-31T21:44:31Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d443b0bc-22fa-4447-ac0c-ea133ae059a2"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2024-01-31T21:44:31Z"
    name: deployer-dockercfg-njpfx
    namespace: sso-noprod
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: deployer-token-bgjb5
      uid: d443b0bc-22fa-4447-ac0c-ea133ae059a2
    resourceVersion: "51037731"
    uid: f63c165c-04d1-4409-bc17-2dfba8f59e02
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: MTAgYnl0ZXMgbG9uZw==
    service-ca.crt: 
    token: MTI1MyBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: deployer
      kubernetes.io/service-account.uid: 82d45ead-f894-4a25-aac8-8c0c8aa5c363
    creationTimestamp: "2024-01-31T21:44:31Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-01-31T21:44:31Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2024-01-31T21:44:31Z"
    name: deployer-token-bgjb5
    namespace: sso-noprod
    resourceVersion: "51037729"
    uid: d443b0bc-22fa-4447-ac0c-ea133ae059a2
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    CLIENT_ID: MTEgYnl0ZXMgbG9uZw==
    CLIENT_SECRET: MTEgYnl0ZXMgbG9uZw==
  kind: Secret
  metadata:
    creationTimestamp: "2024-02-16T16:35:27Z"
    labels:
      app: keycloak
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:CLIENT_ID: {}
          f:CLIENT_SECRET: {}
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"71a24e24-d5ca-440e-84d6-07cf9e071f8f"}: {}
        f:type: {}
      manager: keycloak-operator
      operation: Update
      time: "2024-02-16T16:35:27Z"
    name: keycloak-client-secret-3scale-oidc
    namespace: sso-noprod
    ownerReferences:
    - apiVersion: keycloak.org/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: KeycloakClient
      name: 3scale-oidc
      uid: 71a24e24-d5ca-440e-84d6-07cf9e071f8f
    resourceVersion: "82394238"
    uid: 5d05f8c8-a973-4b24-a078-f78e546ceee3
  type: Opaque
- apiVersion: v1
  data:
    CLIENT_ID: MTMgYnl0ZXMgbG9uZw==
    CLIENT_SECRET: MzIgYnl0ZXMgbG9uZw==
  kind: Secret
  metadata:
    creationTimestamp: "2024-01-31T21:59:28Z"
    labels:
      app: keycloak
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:CLIENT_ID: {}
          f:CLIENT_SECRET: {}
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0dd425b9-5af6-4ad1-b756-80088ece7653"}: {}
        f:type: {}
      manager: keycloak-operator
      operation: Update
      time: "2024-01-31T22:07:42Z"
    name: keycloak-client-secret-3scale-portal
    namespace: sso-noprod
    ownerReferences:
    - apiVersion: keycloak.org/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: KeycloakClient
      name: 3scale-portal
      uid: 0dd425b9-5af6-4ad1-b756-80088ece7653
    resourceVersion: "51064738"
    uid: f6ede7e2-47f9-4baa-86f1-46fa2ca37e50
  type: Opaque
- apiVersion: v1
  data:
    POSTGRES_DATABASE: NCBieXRlcyBsb25n
    POSTGRES_HOST: MTkgYnl0ZXMgbG9uZw==
    POSTGRES_PASSWORD: NTMgYnl0ZXMgbG9uZw==
    POSTGRES_USERNAME: OCBieXRlcyBsb25n
    POSTGRES_VERSION: MiBieXRlcyBsb25n
    SSLMODE: MCBieXRlcyBsb25n
  kind: Secret
  metadata:
    creationTimestamp: "2024-01-31T21:46:52Z"
    labels:
      app: keycloak
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:POSTGRES_DATABASE: {}
          f:POSTGRES_HOST: {}
          f:POSTGRES_PASSWORD: {}
          f:POSTGRES_USERNAME: {}
          f:POSTGRES_VERSION: {}
          f:SSLMODE: {}
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"3f95cbd7-aa83-4561-add8-26cba88d49b8"}: {}
        f:type: {}
      manager: keycloak-operator
      operation: Update
      time: "2024-01-31T21:46:52Z"
    name: keycloak-db-secret
    namespace: sso-noprod
    ownerReferences:
    - apiVersion: keycloak.org/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Keycloak
      name: keycloak
      uid: 3f95cbd7-aa83-4561-add8-26cba88d49b8
    resourceVersion: "51040488"
    uid: 93d10c7b-24d6-43e4-935e-7d6dd4d8b661
  type: Opaque
- apiVersion: v1
  data:
    .dockercfg: OTQxNSBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: rhsso-operator
      kubernetes.io/service-account.uid: 6395f102-a23e-4fec-8437-6e03292930c8
      openshift.io/token-secret.name: rhsso-operator-token-zll7k
      openshift.io/token-secret.value: ""
    creationTimestamp: "2024-01-31T21:45:22Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"363356c2-bd76-4328-ab11-eb62c0af696e"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2024-01-31T21:45:22Z"
    name: rhsso-operator-dockercfg-9h8bp
    namespace: sso-noprod
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: rhsso-operator-token-zll7k
      uid: 363356c2-bd76-4328-ab11-eb62c0af696e
    resourceVersion: "51038750"
    uid: 3ba8ffc1-8978-43bc-b925-ca4200991ce8
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: MTAgYnl0ZXMgbG9uZw==
    service-ca.crt: 
    token: MTI3NyBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: rhsso-operator
      kubernetes.io/service-account.uid: 6395f102-a23e-4fec-8437-6e03292930c8
    creationTimestamp: "2024-01-31T21:45:22Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-01-31T21:45:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2024-01-31T21:45:22Z"
    name: rhsso-operator-token-zll7k
    namespace: sso-noprod
    resourceVersion: "51038749"
    uid: 363356c2-bd76-4328-ab11-eb62c0af696e
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    repo_url: NzQgYnl0ZXMgbG9uZw==
    token: MjggYnl0ZXMgbG9uZw==
  kind: Secret
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: ""
    creationTimestamp: "2024-01-31T21:44:38Z"
    labels:
      app.kubernetes.io/instance: sso-theme-httpd-gcp-ocp-noprod
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:repo_url: {}
          f:token: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
        f:type: {}
      manager: argocd-controller
      operation: Update
      time: "2024-01-31T21:44:38Z"
    name: sso-theme-httpd-secret
    namespace: sso-noprod
    resourceVersion: "51037822"
    uid: 07eab598-ebb4-4779-a658-f6ce31e74c44
  type: Opaque
- apiVersion: v1
  data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQwekNDQXJ1Z0F3SUJBZ0lJUkR4OStyejRyRmt3RFFZSktvWklodmNOQVFFTEJRQXdOakUwTURJR0ExVUUKQXd3cmIzQmxibk5vYVdaMExYTmxjblpwWTJVdGMyVnlkbWx1WnkxemFXZHVaWEpBTVRjd016RXdNemcwTXpBZQpGdzB5TkRBeE16RXlNVFEyTlRGYUZ3MHlOakF4TXpBeU1UUTJOVEphTUNJeElEQWVCZ05WQkFNVEYydGxlV05zCmIyRnJMbk56YnkxdWIzQnliMlF1YzNaak1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTJqRko0NXA3bDA2TC93bmJ6SmNRTFpBVFNDem1EcGVjQmsrMTNsSlhseGdHMG5QQmR1L0E0Tm5PYW84VApUODJIWk9sSEdFWm1BemhFajNodVVtd2dMTVVGaU5hS1puNFArNWE3RFBDVzNNZDRjZXlybE9xbmZyOC85K1J6CkxNVkZSYlZBL1JYM1QwaFVFTFJCTEZIWVlJWFp2TndCT0lLbDN0ZktFOTFkRWhzdDNkZGxJOXpuMXdHMnlPcmYKc08vRVNnblg2M2hYNFViYVFwQWprYWhzMTBsMDROUnFCOFJET3E5SWlKUUJaUU9tWTFyUlV3c2wzVWV4TTMzRgp1WDdmQ3BhV0pLcmpneUpJMnlkdGtCb0VDc2RUYmZmMEw0L0lYa2FjSXNWRzg1bnJ4NFJjWXgvSU5rWnVCUGJhClpDOWdRendCYTBZMk1zTXBNM2RCREs3L01RSURBUUFCbzRINE1JSDFNQTRHQTFVZER3RUIvd1FFQXdJRm9EQVQKQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQVRBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVdCQlRWUkE2NwpmZS9qM2pvVjFRamE3UU40Y1NndHdUQWZCZ05WSFNNRUdEQVdnQlFUOFdOR0VuV3BlbnpzTG5JOGZsQkIyVzNtCmFEQkpCZ05WSFJFRVFqQkFnaGRyWlhsamJHOWhheTV6YzI4dGJtOXdjbTlrTG5OMlk0SWxhMlY1WTJ4dllXc3UKYzNOdkxXNXZjSEp2WkM1emRtTXVZMngxYzNSbGNpNXNiMk5oYkRBMUJnc3JCZ0VFQVpJSUVXUUNBUVFtRXlRMwpOR0ZsTURVMVlpMHhPV0psTFRSbE5tWXRPVFV5WlMwMVlUZzBNalkxWXpFek1qTXdEUVlKS29aSWh2Y05BUUVMCkJRQURnZ0VCQUR3Uy83MjMzOCtNLysyM3dVczdkL2h3NmRQa0ZSRnlYNkk5Wkh0cVpJdXJYY3lzNnhhOVNJcFkKNFphRWVEVjRlMGx0TVBmbGF0U1BiU3Q5TGhOVVJFbytwc0RhV3MwNnQ4dUJBRVowRWxUWHBYOXBYNCt0a1ZpTAo1YnlEYnpOTm1lcHhGK2kxYk8vWFBPN0JyalpNbU5BdHhxdHdQZmNnTzRyV1IvZDNiVlB5MlFWM2hMYkdhdEI4CmxaQTF0NGJQYXZzejcxcnpqbEJSTjZmUjEvaFhaWHFTOU1HQnpXclJrUzFDTy9seU9ZajNCNThGNzA1SlhvV24KdHIrQzFlRERmQitQSDNIMjBVajJkUEcrWTYxcU1GNU5HcDNGSVhlRGhrZWNYTk1qWDlEOGdmTWpWb2tOL21GNgord1V4a0tHOGFpMWJFeHhmaHR3UlhBcXQvZjdzMlVnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVVRDQ0FqbWdBd0lCQWdJSUI0MFcvVlVWc3VRd0RRWUpLb1pJaHZjTkFRRUxCUUF3TmpFME1ESUdBMVVFCkF3d3JiM0JsYm5Ob2FXWjBMWE5sY25acFkyVXRjMlZ5ZG1sdVp5MXphV2R1WlhKQU1UY3dNekV3TXpnME16QWUKRncweU16RXlNakF5TURJME1ESmFGdzB5TmpBeU1UY3lNREkwTUROYU1EWXhOREF5QmdOVkJBTU1LMjl3Wlc1egphR2xtZEMxelpYSjJhV05sTFhObGNuWnBibWN0YzJsbmJtVnlRREUzTURNeE1ETTRORE13Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURIRTB5OXF4K0NTK2F2ZjJKWWtEUWVmWTd0Uy9aYkZjOTIKWTJqZ1hMb2NHSWpQVkFBcXlGTDZBWWJSQi9hd3ZIRFI1RXk5U0xFVW4wOUNzaXFmSzhsN2xrV244NW41OWw3egoyZGRCb3NtWlpTNGJBRi9BTVFZVzIwMEpkSjR6R0RVbnhFQzZvRS9pQUFBZEY1djBMenF1T0Q0S0N5SWo4Wjc5ClJBZS9WQzhwV2RGNjdmeXhqUVh4RG9NMTEvN2RjQ2xoRkNlaUpQNVZwSUduNzMyZmZqMHNBUU53U2NaN1Fnd2wKNWRvSW9pTURIS0RxUmJLRmJvSzRDNWRiUGhjdUxpbWJONkNkRjh2WnZUanFpbFJlK3MyN3YxalBoRVJNTlFBMwo4OVcvdFZUdjhCeHM3WnVpN3lLSzRWdUMvMlNOVUlLUTUvYXYwMzlXOW1kcXcxTGRjbENuQWdNQkFBR2pZekJoCk1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRVDhXTkcKRW5XcGVuenNMbkk4ZmxCQjJXM21hREFmQmdOVkhTTUVHREFXZ0JRVDhXTkdFbldwZW56c0xuSThmbEJCMlczbQphREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBaXEwTU5OTWdWU1hmeW9BRWNYOFdhQnp4bDRGMkprSzdZY3JZCnBsaU4zSktVVXVVdWtYU010NVg3YkhVOTB2anJzZU9IWUNRb0JKdUdnckpWMTF1MDJ0OE1FNDJpcXRudHFObFAKY3lzVHZZTW1OeGxyZmNaN1k1QzBSU0lmdWNUYU4yOXhxOXBra3hGRXlaWDR6ZTg4T1ZBMEhJUGViNm9oME4xUwpDRWtmbWkzc1hoZG11M3c4elpoZlVGeTZvOEQ0bjdEUm9IYWM0b0VLemJaZms0QWFJUXozeGdPdDFSZ1I3Sm9xCnE5Nno2eThIODNqVnFPVHpNSHlNd24xdDVreFlkUlg0dzBNd0hDbk5ZRFhiWDhadjVpbFJhWFlXMEtYYVpEZlUKbzVjTVFDb2xkbUpVek83T09nYkJXaGd5eHlpTGtwN2ZqaG9kQkVxdHhWWElaYVFydFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    tls.key: MTY3NSBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      service.alpha.openshift.io/expiry: "2026-01-30T21:46:52Z"
      service.alpha.openshift.io/originating-service-name: keycloak
      service.alpha.openshift.io/originating-service-uid: 74ae055b-19be-4e6f-952e-5a84265c1323
      service.beta.openshift.io/expiry: "2026-01-30T21:46:52Z"
    creationTimestamp: "2024-01-31T21:46:52Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:tls.crt: {}
          f:tls.key: {}
        f:metadata:
          f:annotations:
            .: {}
            f:service.alpha.openshift.io/expiry: {}
            f:service.alpha.openshift.io/originating-service-name: {}
            f:service.alpha.openshift.io/originating-service-uid: {}
            f:service.beta.openshift.io/expiry: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"74ae055b-19be-4e6f-952e-5a84265c1323"}: {}
        f:type: {}
      manager: service-ca-operator
      operation: Update
      time: "2024-01-31T21:46:52Z"
    name: sso-x509-https-secret
    namespace: sso-noprod
    ownerReferences:
    - apiVersion: v1
      kind: Service
      name: keycloak
      uid: 74ae055b-19be-4e6f-952e-5a84265c1323
    resourceVersion: "51040398"
    uid: 8409b293-634f-455b-ada4-2373bdf3a5b3
  type: kubernetes.io/tls
kind: SecretList
metadata:
  resourceVersion: "152573854"
